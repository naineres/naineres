TD5 CABAL Paul-Louis
IF2
 
Exercice 1 :

1/
mkdir td4
cd td4

2/
git init

3/
sudo apt-get update
sudo apt-get install python3-pip

4/
sudo apt-get install virtualenv

5/
virtualenv .env

6/
source .env/bin/activate

7/
pip list

8/
git status

9/
echo ".env/" > .gitignore

10/
git status

11/
git add .gitignore
git commit -m "Initial commit with .gitignore"
git status

Exercice 2 :

import requests

nano derbyshire_place_ids.py




def get_place_ids():
url = "https://opendomesday.org/api/1.0/county/derbyshire/"
response = requests.get(url)

if response.status_code == 200:
    data = response.json()
    places = data["places"]
    place_ids = [place["id"] for place in places]
    return place_ids
else:
    print(f"Error: {response.status_code}")
    return None
if name == "main":
place_ids = get_place_ids()
print("Place IDs in Derbyshire:")
for place_id in place_ids:
print(place_id)

3/

git add derbyshire_place_ids.py
git commit -m "Add script to fetch place IDs in Derbyshire"

Exercice 3 :


nano manor_ids.py


import requests 
def get_manor_ids(place_id):
    url = f"https://opendomesday.org/api/1.0/place/{place_id}/"
    response = requests.get(url)     if response.status_code == 200:
        data = response.json()
        manor_ids = [manor['id'] for manor in data['manors']]
        return manor_ids
    else:
        print(f"Error: {response.status_code}")
        return None 

python manor_ids.py


python 
import manor_ids
place_id="20086"
output=manor_ids.get_manor_ids(place_id)
print(output)
exit()

nano manor_ids.py

import requests 
def get_manor_ids(place_id):
    url = f"https://opendomesday.org/api/1.0/place/{place_id}/"
    response = requests.get(url)     if response.status_code == 200:
        data = response.json()
        manor_ids = [manor['id'] for manor in data['manors']]
        return manor_ids
    else:
        print(f"Error: {response.status_code}")
        return None if __name__ == '__main__':
    place_id = "20086"
    print(get_manor_ids(place_id))

python manor_ids.py

git add manor_ids.py
git commit -m "Add script to fetch manor IDs for a given place ID"

Exercice 4 :

1/

def get_derbyshire_place_ids():
url = "https://opendomesday.org/api/1.0/county/DERBYSHIRE/places/"
response = requests.get(url)

if response.status_code == 200:
    data = response.json()
    places = data["places"]
    place_ids = [place["id"] for place in places]
    return place_ids
else:
    print(f"Error: {response.status_code}")
    return None
def get_all_manors_in_derbyshire():
place_ids = get_derbyshire_place_ids()
all_manors = []

for place_id in place_ids:
    manors = get_manor_ids(place_id)
    all_manors.extend(manors)

return all_manors

2/

def get_manor_data(manor_id):
url = f"https://opendomesday.org/api/1.0/manor/{manor_id}/"
response = requests.get(url)

if response.status_code == 200:
    data = response.json()
    geld_paid = data["geld_value_1086"]
    total_ploughs = data["ploughs_total_1086"]
    return (geld_paid, total_ploughs)
else:
    print(f"Error: {response.status_code}")
    return None
3/

import pandas as pd

def create_dataframe(manor_ids):
manor_data = [get_manor_data(manor_id) for manor_id in manor_ids]
df = pd.DataFrame(manor_data, columns=["geld_paid", "total_ploughs"])
return df

4/

def compute_sums():
all_manors = get_all_manors_in_derbyshire()
df = create_dataframe(all_manors)
total_geld_paid = df["geld_paid"].sum()
total_ploughs_owned = df["total_ploughs"].sum()
return total_geld_paid, total_ploughs_owned

6/

git add manor_ids.py
git commit -m "Add functions to fetch all manors in Derbyshire and compute sums of geld paid and total ploughs owned
